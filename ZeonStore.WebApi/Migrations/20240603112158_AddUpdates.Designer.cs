// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZeonStore.WebApi.Data;

#nullable disable

namespace ZeonStore.WebApi.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20240603112158_AddUpdates")]
    partial class AddUpdates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("ZeonStore.Common.DownloadFileInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DownloadUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ExebutableName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ServerApplicationDetailedInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UpdateId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ServerApplicationDetailedInfoId");

                    b.HasIndex("UpdateId");

                    b.ToTable("DownloadFileInfo");
                });

            modelBuilder.Entity("ZeonStore.Common.Update", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ServerApplicationDetailedInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ServerApplicationDetailedInfoId");

                    b.ToTable("Update");
                });

            modelBuilder.Entity("ZeonStore.WebApi.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Publisher");
                });

            modelBuilder.Entity("ZeonStore.WebApi.Models.ServerApplicationDetailedInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categories")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrls")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PublisherId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("ZeonStore.Common.DownloadFileInfo", b =>
                {
                    b.HasOne("ZeonStore.WebApi.Models.ServerApplicationDetailedInfo", null)
                        .WithMany("Downloads")
                        .HasForeignKey("ServerApplicationDetailedInfoId");

                    b.HasOne("ZeonStore.Common.Update", null)
                        .WithMany("UpdateFiles")
                        .HasForeignKey("UpdateId");
                });

            modelBuilder.Entity("ZeonStore.Common.Update", b =>
                {
                    b.HasOne("ZeonStore.WebApi.Models.ServerApplicationDetailedInfo", null)
                        .WithMany("Updates")
                        .HasForeignKey("ServerApplicationDetailedInfoId");
                });

            modelBuilder.Entity("ZeonStore.WebApi.Models.ServerApplicationDetailedInfo", b =>
                {
                    b.HasOne("ZeonStore.WebApi.Models.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("ZeonStore.Common.Update", b =>
                {
                    b.Navigation("UpdateFiles");
                });

            modelBuilder.Entity("ZeonStore.WebApi.Models.ServerApplicationDetailedInfo", b =>
                {
                    b.Navigation("Downloads");

                    b.Navigation("Updates");
                });
#pragma warning restore 612, 618
        }
    }
}
